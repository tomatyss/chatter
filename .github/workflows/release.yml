name: Release Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: chatter-x86_64-unknown-linux-gnu.tar.gz
            binary: chatter
          - os: macos-14
            target: aarch64-apple-darwin
            artifact: chatter-aarch64-apple-darwin.tar.gz
            binary: chatter
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: chatter-x86_64-pc-windows-msvc.zip
            binary: chatter.exe

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo builds
        uses: Swatinem/rust-cache@v2

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Run tests
        run: cargo test --locked

      - name: Build release binary
        run: cargo build --release --locked

      - name: Package binary (Unix)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          bin_path="target/release/${{ matrix.binary }}"
          archive="${{ matrix.artifact }}"
          tar czf "$archive" -C "$(dirname "$bin_path")" "${{ matrix.binary }}"

      - name: Package binary (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $binPath = "target/release/${{ matrix.binary }}"
          $archive = "${{ matrix.artifact }}"
          $tempDir = "release"
          New-Item -ItemType Directory -Path $tempDir -Force | Out-Null
          Copy-Item -Path $binPath -Destination $tempDir/
          Compress-Archive -Path "$tempDir/${{ matrix.binary }}" -DestinationPath $archive -Force

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}

      - name: Attach assets to release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.artifact }}
